#include <stdio.h>

// 윤년 확인 함수
int is_leap_year(int year) {
    return (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);
}

// 요일 계산 함수
int calculate_day_of_week(int year, int month, int day) {
    if (month == 1 || month == 2) {
        month += 12;
        year -= 1;
    }
    int K = year % 100;
    int J = year / 100;
    int h = (day + (13 * (month + 1)) / 5 + K + K / 4 + J / 4 - 2 * J) % 7;
    return (h + 6) % 7; // 요일 0 = Sunday
}

int main() {
    char *요일[7] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
    char *요일_short[7] = {"sun", "mon", "tue", "wed", "thu", "fri", "sat"}; // 짧은 요일
    int days_in_month[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};

    int k, m, day;
    while(1) {
    scanf("%d %d %d", &k, &m, &day);

    if(k<2000 || k>2010) { printf("INPUT ERROR!\n"); continue;}
    if(m<1 || m>12) { printf("INPUT ERROR!\n"); continue; }

    int month = days_in_month[m - 1];
    if (is_leap_year(k) && m == 2) {
        month += 1; // 윤년의 2월은 29일
    }

    if (day > month || day<1) {
        printf("INPUT ERROR!\n");
        continue;
    }

    printf("%d. %d\n", k, m); // 연도와 월 출력
    int first = calculate_day_of_week(k, m, 1); // 해당 월의 1일 요일
    int real = calculate_day_of_week(k, m, day); // 입력된 날짜의 요일

    // 짧은 요일 출력
    for (int i = 0; i < 7; i++) {
        printf("%s ", 요일_short[i]);
    }
    printf("\n");

    for(int i=0;i<first;i++) {
        printf("    ");
    }
    for(int i=1;i<=month;i++) {

       if(i>=10) { printf(" ");}
       else {printf("  "); }

       printf("%d",i);

       if((first+i-1)%7==6) {
        printf("\n");
       }
       else{ printf(" ");}


    }
    

       
    


    
    printf("\n");
printf("%s",요일[real]);
break; }

}
